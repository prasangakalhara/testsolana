{"ast":null,"code":"var _jsxFileName = \"D:\\\\testone\\\\metaplex\\\\js\\\\packages\\\\candy-machine-ui\\\\src\\\\App.tsx\",\n    _process$env$REACT_AP,\n    _process$env$REACT_AP2,\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useMemo } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport Home from './Home';\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletExtensionWallet, getSolletWallet } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { createTheme, ThemeProvider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  }\n});\n\nconst getCandyMachineId = () => {\n  try {\n    return new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\n  } catch (e) {\n    console.log('Failed to construct CandyMachineId', e);\n    return undefined;\n  }\n};\n\nlet error = undefined;\n\nif (process.env.REACT_APP_SOLANA_NETWORK === undefined) {\n  error = \"Your REACT_APP_SOLANA_NETWORK value in the .env file doesn't look right! The options are devnet and mainnet-beta!\";\n} else if (process.env.REACT_APP_SOLANA_RPC_HOST === undefined) {\n  error = \"Your REACT_APP_SOLANA_RPC_HOST value in the .env file doesn't look right! Make sure you enter it in as a plain-text url (i.e., https://metaplex.devnet.rpcpool.com/)\";\n}\n\nconst candyMachineId = getCandyMachineId();\nconst network = (_process$env$REACT_AP = process.env.REACT_APP_SOLANA_NETWORK) !== null && _process$env$REACT_AP !== void 0 ? _process$env$REACT_AP : 'devnet';\nconst rpcHost = (_process$env$REACT_AP2 = process.env.REACT_APP_SOLANA_RPC_HOST) !== null && _process$env$REACT_AP2 !== void 0 ? _process$env$REACT_AP2 : anchor.web3.clusterApiUrl('devnet');\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSolflareWallet(), getSlopeWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: /*#__PURE__*/_jsxDEV(Home, {\n            candyMachineId: candyMachineId,\n            connection: connection,\n            txTimeout: DEFAULT_TIMEOUT,\n            rpcHost: rpcHost,\n            network: network,\n            error: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/testone/metaplex/js/packages/candy-machine-ui/src/App.tsx"],"names":["useMemo","anchor","Home","DEFAULT_TIMEOUT","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletExtensionWallet","getSolletWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","createTheme","ThemeProvider","theme","palette","type","getCandyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","e","console","log","undefined","error","REACT_APP_SOLANA_NETWORK","REACT_APP_SOLANA_RPC_HOST","candyMachineId","network","rpcHost","connection","Connection","App","endpoint","wallets"],"mappings":"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","sourcesContent":["import './App.css';\r\nimport { useMemo } from 'react';\r\nimport * as anchor from '@project-serum/anchor';\r\nimport Home from './Home';\r\nimport { DEFAULT_TIMEOUT } from './connection';\r\nimport { clusterApiUrl } from '@solana/web3.js';\r\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\r\nimport {\r\n  getPhantomWallet,\r\n  getSlopeWallet,\r\n  getSolflareWallet,\r\n  getSolletExtensionWallet,\r\n  getSolletWallet,\r\n} from '@solana/wallet-adapter-wallets';\r\n\r\nimport {\r\n  ConnectionProvider,\r\n  WalletProvider,\r\n} from '@solana/wallet-adapter-react';\r\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\r\n\r\nimport { createTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n});\r\n\r\nconst getCandyMachineId = (): anchor.web3.PublicKey | undefined => {\r\n  try {\r\n    return new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID!);\r\n  } catch (e) {\r\n    console.log('Failed to construct CandyMachineId', e);\r\n    return undefined;\r\n  }\r\n};\r\n\r\nlet error: string | undefined = undefined;\r\n\r\nif (process.env.REACT_APP_SOLANA_NETWORK === undefined) {\r\n  error =\r\n    \"Your REACT_APP_SOLANA_NETWORK value in the .env file doesn't look right! The options are devnet and mainnet-beta!\";\r\n} else if (process.env.REACT_APP_SOLANA_RPC_HOST === undefined) {\r\n  error =\r\n    \"Your REACT_APP_SOLANA_RPC_HOST value in the .env file doesn't look right! Make sure you enter it in as a plain-text url (i.e., https://metaplex.devnet.rpcpool.com/)\";\r\n}\r\n\r\nconst candyMachineId = getCandyMachineId();\r\nconst network = (process.env.REACT_APP_SOLANA_NETWORK ??\r\n  'devnet') as WalletAdapterNetwork;\r\nconst rpcHost =\r\n  process.env.REACT_APP_SOLANA_RPC_HOST ?? anchor.web3.clusterApiUrl('devnet');\r\nconst connection = new anchor.web3.Connection(rpcHost);\r\n\r\nconst App = () => {\r\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\r\n\r\n  const wallets = useMemo(\r\n    () => [\r\n      getPhantomWallet(),\r\n      getSolflareWallet(),\r\n      getSlopeWallet(),\r\n      getSolletWallet({ network }),\r\n      getSolletExtensionWallet({ network }),\r\n    ],\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <ConnectionProvider endpoint={endpoint}>\r\n        <WalletProvider wallets={wallets} autoConnect>\r\n          <WalletDialogProvider>\r\n            <Home\r\n              candyMachineId={candyMachineId}\r\n              connection={connection}\r\n              txTimeout={DEFAULT_TIMEOUT}\r\n              rpcHost={rpcHost}\r\n              network={network}\r\n              error={error}\r\n            />\r\n          </WalletDialogProvider>\r\n        </WalletProvider>\r\n      </ConnectionProvider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}